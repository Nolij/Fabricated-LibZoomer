plugins {
	id 'maven-publish'
	alias libs.plugins.fabric.loom
	alias libs.plugins.vineflower
}

archivesBaseName = project.archives_base_name
version = System.env.GITHUB_ACTIONS == 'true'
	? "$project.version+${libs.versions.minecraft.get()}.github.$System.env.GITHUB_RUN_NUMBER"
	: "$project.version+${libs.versions.minecraft.get()}"
group = project.maven_group

sourceSets {
	testmod {
		compileClasspath += main.compileClasspath
		runtimeClasspath += main.runtimeClasspath
	}
}

repositories {
	maven { url "https://maven.quiltmc.org/repository/release/" }
}

// All the dependencies are declared at gradle/libs.version.toml and referenced with "libs.<id>"
// See https://docs.gradle.org/current/userguide/platforms.html for information on how version catalogs work.
dependencies {
	minecraft libs.minecraft
	mappings variantOf(libs.quilt.mappings) { classifier 'intermediary-v2' }
	modImplementation libs.fabric.loader

	modImplementation libs.fabric.api

	afterEvaluate {
		testmodImplementation sourceSets.main.output
	}
}

loom {
	runs {
		testmodClient {
			client()
			configName = 'Testmod Client'
			source(project.sourceSets.testmod)
		}
	}
}

processResources {
	inputs.property 'version', version

	filesMatching('fabric.mod.json') {
		expand "version": version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = 'UTF-8'
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Still required by IDEs such as Eclipse and Visual Studio Code
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17

	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()

	// If this mod is going to be a library, then it should also generate Javadocs in order to aid with developement.
	// Uncomment this line to generate them.
	withJavadocJar()
}

jar {
	from('LICENSE') {
		rename { "${it}_${archivesBaseName}" }
	}
}

// Configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java

			pom {
				name = 'Fabricated LibZoomer'
				description = 'A library that allows other Minecraft mods to have powerful zooming easily.'
				url = 'https://github.com/Nolij/Fabricated-LibZoomer'
				licenses {
					license {
						name = 'The Open Software License Version 3.0'
						url = 'https://opensource.org/licenses/OSL-3.0'
					}
				}
				developers {
					developer {
						id = 'Nolij'
						name = 'Nolij'
					}
				}
				scm {
					connection = 'scm:git:https://github.com/Nolij/Fabricated-LibZoomer.git'
					developerConnection = 'scm:git:git@github.com:Nolij/Fabricated-LibZoomer.git'
					url = 'https://github.com/Nolij/Fabricated-LibZoomer'
				}
			}
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
